diff '--color=auto' -p -X ../chromium-loongarch64/chromium/exclude -N -u -r a/mojo/public/cpp/bindings/type_converter.h b/mojo/public/cpp/bindings/type_converter.h
--- a/mojo/public/cpp/bindings/type_converter.h	2024-02-21 08:20:49.858713600 +0800
+++ b/mojo/public/cpp/bindings/type_converter.h	2024-02-21 20:52:35.257578511 +0800
@@ -95,13 +95,16 @@ inline T ConvertTo(U* obj) {
   return TypeConverter<T, std::remove_cv_t<U>*>::Convert(obj);
 }
 
+template <class T> constexpr T *clang_to_address(T *P) { return P; }
+template <class T> auto clang_to_address(const T &P) -> decltype(P.operator->()) { return P.operator->(); }
+
 template <typename T, typename U>
   requires requires(const U& obj) {
     not std::is_pointer_v<U>;
-    { mojo::ConvertTo<T>(std::to_address(obj)) } -> std::same_as<T>;
+    { mojo::ConvertTo<T>(clang_to_address(obj)) } -> std::same_as<T>;
   }
 inline T ConvertTo(const U& obj) {
-  return mojo::ConvertTo<T>(std::to_address(obj));
+  return mojo::ConvertTo<T>(clang_to_address(obj));
 }
 
 template <typename T, typename U>
