diff '--color=auto' -p -X ../chromium-loongarch64/chromium/exclude -N -u -r a/third_party/xnnpack/BUILD.gn b/third_party/xnnpack/BUILD.gn
--- a/third_party/xnnpack/BUILD.gn	2000-01-01 00:00:00.000000000 +0800
+++ b/third_party/xnnpack/BUILD.gn	2000-01-01 00:00:00.000000000 +0800
@@ -1494,6 +1494,16 @@ if (current_cpu == "x64" || current_cpu
     ":xx-pad_arm64_standalone",
     ":xx-transposev_arm64_standalone",
   ]
+} else if (current_cpu == "loong64") {
+  xnnpack_deps = [
+    ":configs_loong64",
+    ":enums_loong64",
+  ]
+
+  xnnpack_standalone_deps = [
+    ":configs_loong64_standalone",
+    ":enums_loong64_standalone",
+  ]
 } else {
   xnnpack_deps = []
   xnnpack_standalone_deps = []
@@ -42035,6 +42045,160 @@ if (current_cpu == "arm64") {
     ]
 
     configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+}
+
+if (current_cpu == "loong64") {
+  source_set("configs_loong64") {
+    cflags = []
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/configs/argmaxpool-config.c",
+      "src/src/configs/avgpool-config.c",
+      "src/src/configs/binary-elementwise-config.c",
+      "src/src/configs/cmul-config.c",
+      "src/src/configs/conv-hwc2chw-config.c",
+      "src/src/configs/dwconv-config.c",
+      "src/src/configs/dwconv2d-chw-config.c",
+      "src/src/configs/gemm-config.c",
+      "src/src/configs/hardware-config.c",
+      "src/src/configs/ibilinear-chw-config.c",
+      "src/src/configs/ibilinear-config.c",
+      "src/src/configs/lut32norm-config.c",
+      "src/src/configs/maxpool-config.c",
+      "src/src/configs/pack-lh-config.c",
+      "src/src/configs/raddstoreexpminusmax-config.c",
+      "src/src/configs/reduce-config.c",
+      "src/src/configs/spmm-config.c",
+      "src/src/configs/transpose-config.c",
+      "src/src/configs/unary-elementwise-config.c",
+      "src/src/configs/unpool-config.c",
+      "src/src/configs/vmulcaddc-config.c",
+      "src/src/configs/x8-lut-config.c",
+      "src/src/configs/xx-fill-config.c",
+      "src/src/configs/xx-pad-config.c",
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool",
+    ]
+
+    public_configs = [ ":xnnpack_config" ]
+  }
+
+  # This is a target that cannot depend on //base.
+  source_set("configs_loong64_standalone") {
+    cflags = []
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/configs/argmaxpool-config.c",
+      "src/src/configs/avgpool-config.c",
+      "src/src/configs/binary-elementwise-config.c",
+      "src/src/configs/cmul-config.c",
+      "src/src/configs/conv-hwc2chw-config.c",
+      "src/src/configs/dwconv-config.c",
+      "src/src/configs/dwconv2d-chw-config.c",
+      "src/src/configs/gemm-config.c",
+      "src/src/configs/hardware-config.c",
+      "src/src/configs/ibilinear-chw-config.c",
+      "src/src/configs/ibilinear-config.c",
+      "src/src/configs/lut32norm-config.c",
+      "src/src/configs/maxpool-config.c",
+      "src/src/configs/pack-lh-config.c",
+      "src/src/configs/raddstoreexpminusmax-config.c",
+      "src/src/configs/reduce-config.c",
+      "src/src/configs/spmm-config.c",
+      "src/src/configs/transpose-config.c",
+      "src/src/configs/unary-elementwise-config.c",
+      "src/src/configs/unpool-config.c",
+      "src/src/configs/vmulcaddc-config.c",
+      "src/src/configs/x8-lut-config.c",
+      "src/src/configs/xx-fill-config.c",
+      "src/src/configs/xx-pad-config.c",
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool:pthreadpool_standalone",
+    ]
+
+    public_configs = [ ":xnnpack_config" ]
+
+    if (!(is_android && use_order_profiling)) {
+      assert_no_deps = [ "//base" ]
+    }
+  }
+
+  source_set("enums_loong64") {
+    cflags = []
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/enums/allocation-type.c",
+      "src/src/enums/datatype-strings.c",
+      "src/src/enums/microkernel-type.c",
+      "src/src/enums/node-type.c",
+      "src/src/enums/operator-type.c",
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
+    configs += [ "//build/config/compiler:no_chromium_code" ]
+    configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
+
+    deps = [
+      "//third_party/cpuinfo",
+      "//third_party/fp16",
+      "//third_party/fxdiv",
+      "//third_party/pthreadpool",
+    ]
+
+    public_configs = [ ":xnnpack_config" ]
+  }
+
+  # This is a target that cannot depend on //base.
+  source_set("enums_loong64_standalone") {
+    cflags = []
+
+    sources = [
+      "src/include/xnnpack.h",
+      "src/src/enums/allocation-type.c",
+      "src/src/enums/datatype-strings.c",
+      "src/src/enums/microkernel-type.c",
+      "src/src/enums/node-type.c",
+      "src/src/enums/operator-type.c",
+    ]
+
+    configs -= [ "//build/config/compiler:chromium_code" ]
     configs += [ "//build/config/compiler:no_chromium_code" ]
     configs += [ "//build/config/sanitizers:cfi_icall_generalize_pointers" ]
 
diff '--color=auto' -p -X ../chromium-loongarch64/chromium/exclude -N -u -r a/third_party/xnnpack/src/src/xnnpack/common.h b/third_party/xnnpack/src/src/xnnpack/common.h
--- a/third_party/xnnpack/src/src/xnnpack/common.h	2000-01-01 00:00:00.000000000 +0800
+++ b/third_party/xnnpack/src/src/xnnpack/common.h	2000-01-01 00:00:00.000000000 +0800
@@ -79,6 +79,12 @@
 #define XNN_ARCH_WASMRELAXEDSIMD 0
 #endif
 
+#if defined(__loongarch__)
+#define XNN_ARCH_LOONGARCH 1
+#else
+#define XNN_ARCH_LOONGARCH 0
+#endif
+
 // Define platform identification macros
 
 #if defined(__ANDROID__)
diff '--color=auto' -p -X ../chromium-loongarch64/chromium/exclude -N -u -r a/third_party/xnnpack/src/src/xnnpack/hardware-config.h b/third_party/xnnpack/src/src/xnnpack/hardware-config.h
--- a/third_party/xnnpack/src/src/xnnpack/hardware-config.h	2000-01-01 00:00:00.000000000 +0800
+++ b/third_party/xnnpack/src/src/xnnpack/hardware-config.h	2000-01-01 00:00:00.000000000 +0800
@@ -77,6 +77,10 @@ enum xnn_arch_flags {
 #if XNN_ARCH_HEXAGON
   xnn_arch_hvx = 1 << 0,
 #endif  // XNN_ARCH_HEXAGON
+#if XNN_ARCH_LOONGARCH
+  xnn_arch_lsx = 1 << 0,
+  xnn_arch_lasx = 1 << 1,
+#endif  // XNN_ARCH_LOONGARCH
 };
 
 struct xnn_hardware_config {
